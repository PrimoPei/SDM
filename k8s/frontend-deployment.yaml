apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  namespace: stable-diffusion-multiplayer
  labels:
    app: sd-multiplayer
    component: frontend
spec:
  replicas: 3  # 前端可以多副本
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: sd-multiplayer
      component: frontend
  template:
    metadata:
      labels:
        app: sd-multiplayer
        component: frontend
    spec:
      containers:
      - name: frontend
        image: your-registry/sd-multiplayer-frontend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          name: http
        
        # 资源限制和请求
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        
        # 健康检查
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        
        # 环境变量（如需要）
        env:
        - name: NGINX_WORKER_PROCESSES
          valueFrom:
            configMapKeyRef:
              name: sd-multiplayer-config
              key: NGINX_WORKER_PROCESSES
        - name: NGINX_WORKER_CONNECTIONS
          valueFrom:
            configMapKeyRef:
              name: sd-multiplayer-config
              key: NGINX_WORKER_CONNECTIONS
      
      # 重启策略
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: stable-diffusion-multiplayer
  labels:
    app: sd-multiplayer
    component: frontend
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: sd-multiplayer
    component: frontend

---
# HorizontalPodAutoscaler 用于前端自动扩缩容
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: frontend-hpa
  namespace: stable-diffusion-multiplayer
  labels:
    app: sd-multiplayer
    component: frontend
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: frontend-deployment
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60 